function cardDirective(){var e={restrict:"EA",templateUrl:"../../components/common/card/card.html",scope:{title:"<",summary:"<",owner:"<",imgSrc:"<",id:"<"},controller:CardController,controllerAs:"vm",bindToController:!0};return e}function CardController(){var e=this;e.imgSrc=e.imgSrc.split("client")[1]}function loginDirective(){var e={restrict:"EA",templateUrl:"../../components/user/login/login.html",controller:FooterController,controllerAs:"vm",bindToController:!0};return e}function FooterController(){}function navbarDirective(){var e={restrict:"EA",templateUrl:"../../components/user/navbar/navbar.html",controller:navbarController,controllerAs:"vm",bindToController:!0};return e}function navbarController(){}function profileDirective(){var e={restrict:"EA",templateUrl:"../../components/user/profile/profile.html",transclude:!0,controller:profileController,controllerAs:"vm",bindToController:!0};return e}function profileController(e,t,r,a){function o(){}var n=this;n.tracks={},o()}function registerDirective(){var e={restrict:"EA",templateUrl:"../../components/user/register/register.html",controller:registerController,controllerAs:"vm",bindToController:!0};return e}function registerController(){}function layoutDirective(){var e={restrict:"EA",templateUrl:"../../components/rota/layout/layout.html",scope:{},controller:LayoutController,controllerAs:"vm",bindToController:!0};return e}function LayoutController(e,t,r,a,o,n,l,i,c,s){function u(){return d.params.latNE&&d.params.lngNE&&d.params.latSW&&d.params.lngSW?void c.getMap().then(function(e){var t=[[d.params.latNE,d.params.lngNE],[d.params.latSW,d.params.lngSW]];return e.fitBounds(t),d.getTrack().then(function(){})}):d.getTrack().then(function(){})}function p(){return o.getTrack(d.params).then(function(e){d.tracks.data=e.data,d.tracks.data==[],n.jsonToMarkerArray(d.tracks.data).then(function(e){d.markers=n.toObject(e);L.geoJson(d.tracks.data).getBounds()}).catch(function(e){})})}var d=this;d.tracks={},d.getTrack=p,d.mapAutoRefresh=!0,d.params={latNE:parseFloat(a.latNE),lngNE:parseFloat(a.lngNE),latSW:parseFloat(a.latSW),lngSW:parseFloat(a.lngSW)},u(),d.layers=l.getLayer(),d.center=l.getCenter(),d.changeIcon=function(e){e.icon={type:"makiMarker",icon:"park",color:"#512DA8",size:"l"}},d.removeIcon=function(e){e.icon={type:"makiMarker",icon:"park",color:"#004c00",size:"l"}},d.zoomMarker=function(e){var t=[[e.lat,e.lng]],r=L.latLngBounds(t);c.getMap().then(function(e){e.fitBounds(r)})},d.mapEvents=i.getAvailableMapEvents();for(var m in d.mapEvents){var g="leafletDirectiveMarker."+d.mapEvents[m];e.$on(g,function(e,t){"leafletDirectiveMarker.mouseover"==e.name?d.changeIcon(d.markers[t.modelName]):"leafletDirectiveMarker.mouseout"==e.name?d.removeIcon(d.markers[t.modelName]):"leafletDirectiveMap.moveend"==e.name&&console.log(asd)})}var f="leafletDirectiveMap.moveend";e.$on(f,function(e,t){d.mapAutoRefresh&&(void 0!=d.markers&&(d.params.latNE=t.leafletObject.getBounds()._northEast.lat,d.params.lngNE=t.leafletObject.getBounds()._northEast.lng,d.params.latSW=t.leafletObject.getBounds()._southWest.lat,d.params.lngSW=t.leafletObject.getBounds()._southWest.lng),s.search({latNE:t.leafletObject.getBounds()._northEast.lat,lngNE:t.leafletObject.getBounds()._northEast.lng,latSW:t.leafletObject.getBounds()._southWest.lat,lngSW:t.leafletObject.getBounds()._southWest.lng}),c.getMap().then(function(e){return d.getTrack().then(function(){})}))}),e.$on("$routeUpdate",function(){alert(1)})}function layoutDetailDirective(){var e={restrict:"EA",templateUrl:"../../components/rota/layout.detail/layout.detail.html",scope:{},controller:LayoutDetailController,controllerAs:"vm",bindToController:!0};return e}function LayoutDetailController(e,t,r,a,o){function n(){r.getTrackDetail(t.id).then(function(e){l.trackDetail=e.data,l.trackDetail.properties.img_src=l.trackDetail.properties.img_src.split("client")[1].replaceAll("\\","/"),l.center={lat:l.trackDetail.geometry.coordinates[1],lng:l.trackDetail.geometry.coordinates[0],zoom:12},o.getMap().then(function(e){var t=l.trackDetail.properties.gpx;new L.GPX(t,{async:!0}).on("loaded",function(t){e.fitBounds(t.target.getBounds())}).addTo(e)})})}var l=this;l.trackDetail={},l.center={},n(),l.layers=a.getLayer()}function markerParser(e){function t(t){for(var r=e.defer(),a=[],o=0;o<t.length;o++){var n={layer:"rotalar",lat:t[o].geometry.coordinates[1],lng:t[o].geometry.coordinates[0],focus:!1,message:t[o].properties.name,icon:{type:"makiMarker",icon:"park",color:"#004c00",size:"l"},properties:{id:t[o]._id,name:t[o].properties.name,altitude:t[o].properties.altitude,distance:t[o].properties.distance,summary:t[o].properties.summary,owner:t[o].properties.ownedBy,img_src:t[o].properties.img_src}};a.push(n)}return a&&r.resolve(a),r.promise}function r(e){for(var t={},r=0;r<e.length;++r)void 0!==e[r]&&(t[r]=e[r]);return t}var a={jsonToMarkerArray:t,toObject:r};return a}function trackService(e){function t(t){return e({method:"GET",url:"api/tracks?latNE="+t.latNE+"&lngNE="+t.lngNE+"&latSW="+t.latSW+"&lngSW="+t.lngSW,headers:{"content-type":"application/json; charset=utf-8"}})}function r(t){return e({method:"GET",url:"api/tracks/"+t,headers:{"content-type":"application/json; charset=utf-8"}})}function a(t){return e({method:"POST",url:"api/tracks",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:$.param({name:t.name,distance:t.distance,altitude:t.altitude,summary:t.summary,img_src:t.img_src,coordinates:t.coordinates,ownedBy:t.ownedBy,gpx:t.gpx})})}var o={getTrack:t,addTrack:a,getTrackDetail:r};return o}function userService(e){function t(){return e({method:"GET",url:"api/profile"})}var r={getUser:t};return r}function mapConfigService(){function e(){var e={baselayers:{Stamen_Terrain:{name:"Arazi",url:"http://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png",type:"xyz",attribution:'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'},Thunderforest_Outdoors:{name:"Outdoor",url:"http://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png",type:"xyz"}},overlays:{rotalar:{type:"group",name:"Rotalar",visible:!0}}};return e}function t(){var e={lat:39.9032918,lng:32.6223396,zoom:6};return e}var r={getLayer:e,getCenter:t};return r}function geocode(e){return{geocodeAddress:function(t){var r=new google.maps.Geocoder,a=e.defer();return r.geocode({address:t},function(e,t){return t==google.maps.GeocoderStatus.OK?a.resolve(e[0].geometry.location):a.reject()}),a.promise}}}function reverseGeocode(e,t){var r={};return r.geocodeLatlng=function(t,r){var a=new google.maps.Geocoder,o=e.defer(),n=new google.maps.LatLng(t,r);return a.geocode({latLng:n},function(e){return e&&e.length>0?o.resolve(e[0].formatted_address):o.resolve(null)},function(e){return o.resolve(null)}),o.promise},r}String.prototype.replaceAll=function(e,t){var r=this;return r.split(e).join(t)},window.loadAutoComplete=function(){$(".geocode-autocomplete").each(function(){var e=this;$(e).typeahead({source:function(e,t){var r=[];$.getJSON("https://geocode-maps.yandex.ru/1.x/?results=5&bbox=24.125977,34.452218~45.109863,42.601620&format=json&lang=tr_TR&geocode="+e,function(e){for(var a=0;a<e.response.GeoObjectCollection.featureMember.length;a++){var o={name:e.response.GeoObjectCollection.featureMember[a].GeoObject.name+", "+e.response.GeoObjectCollection.featureMember[a].GeoObject.description.replace(", Türkiye",""),description:e.response.GeoObjectCollection.featureMember[a].GeoObject.description,longlat:e.response.GeoObjectCollection.featureMember[a].GeoObject.Point.pos,type:e.response.GeoObjectCollection.featureMember[a].GeoObject.metaDataProperty.GeocoderMetaData.kind,alt_type:e.response.GeoObjectCollection.featureMember[a].GeoObject.metaDataProperty.GeocoderMetaData,bbox:e.response.GeoObjectCollection.featureMember[a].GeoObject.boundedBy.Envelope};o.description.indexOf("Türkiye")!==-1&&r.push(o)}return t(r)})},afterSelect:function(e){var t=document.createElement("a");t.href="/a/"+e.name+"?latSW="+e.bbox.lowerCorner.split(" ")[1]+"&lngSW="+e.bbox.lowerCorner.split(" ")[0]+"&latNE="+e.bbox.upperCorner.split(" ")[1]+"&lngNE="+e.bbox.upperCorner.split(" ")[0],document.body.appendChild(t),t.click()},highlighter:function(e){return console.log(e),e='<span class="item-address">'+e+"</span>"},minLength:3,fitToElement:!0,matcher:function(){return!0},updater:function(e){return e}}),$(e).on("typeahead:change",function(t,r){$(e).val(r.find("a>span.item-address").text())})})},window.loadAutoComplete(),function(){"use strict";angular.module("app",["app.navbar","app.login","app.register","app.card","app.profile","app.userService","app.trackService","app.markerParser","app.map","app.content","app.rota","oc.lazyLoad","ui.router","leaflet-directive","ngAutocomplete"]).config(["$stateProvider","$locationProvider","$logProvider","$ocLazyLoadProvider","$compileProvider",function(e,t,r,a,o){a.config({debug:!0}),t.html5Mode(!0),r.debugEnabled(!1),o.debugInfoEnabled(!1);var n={name:"login",url:"/giris",template:"<login-directive></login-directive>"};e.state(n);var l={name:"register",url:"/kayit",template:"<register-directive></register-directive>"};e.state(l);var i={name:"profile",url:"/profil",template:"<navbar-directive></navbar-directive><profile-directive></profile-directive>"};e.state(i)}]).run(["$rootScope","userService",function(e,t){function r(){return a().then(function(){})}function a(){return t.getUser().then(function(t){t.data.OperationResult&&(e.user=t.data.user,e.flagLogin=!0)}).catch(function(e){})}r()}])}(),function(){"use strict";angular.module("app.content",["app.header","app.footer","ui.router"]).config(["$stateProvider",function(e){var t={name:"defaultState",url:"/",templateUrl:"../../components/content/landing/landing.html"};e.state(t)}])}(),function(){"use strict";angular.module("app.rota",["app.layout","app.layoutDetail","app.rotaekle","ui.router"]).config(["$stateProvider",function(e){var t={name:"layout",url:"/a/{term}?latSW&lngSW&latNE&lngNE",template:"<navbar-directive></navbar-directive><layout-directive></layout-directive>",reloadOnSearch:!1};e.state(t);var r={name:"layoutDetail",url:"/rota/:id",template:"<navbar-directive></navbar-directive><layout-detail-directive></layout-detail-directive>"};e.state(r);var a={name:"addtrack",url:"/rotaekle",templateUrl:"../../components/rota/rotaekle/rotaekle.html",controller:"rotaEkleController",controllerAs:"rotaEkleController"};e.state(a);var o={name:"addtrack.location",url:"/konum",templateUrl:"../../components/rota/rotaekle.location/rotaekle.location.html"};e.state(o);var n={name:"addtrack.meta",url:"/bilgi",templateUrl:"../../components/rota/rotaekle.meta/rotaekle.meta.html"};e.state(n);var l={name:"addtrack.image",url:"/resimler",templateUrl:"../../components/rota/rotaekle.image/rotaekle.image.html"};e.state(l);var i={name:"addtrack.gpx",url:"/gpx",templateUrl:"../../components/rota/rotaekle.gpx/rotaekle.gpx.html"};e.state(i);var c={name:"addtrack.finish",url:"/kaydet",templateUrl:"../../components/rota/rotaekle.finish/rotaekle.finish.html"};e.state(c)}])}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"../../components/content/footer/footer.html"};return e}angular.module("app.footer",[]).directive("footerDirective",e)}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"../../components/content/headline/headline.html",scope:{},controller:t,controllerAs:"vm",bindToController:!0};return e}function t(e,t){var r=this;window.loadAutoComplete(),r.search=function(){t.go("layout",{term:r.elma})},$("#Autocomplete").focus(function(){$("html, body").animate({scrollTop:$("#Autocomplete").offset().top-80},300)})}angular.module("app.header",[]).directive("headlineDirective",e),t.$inject=["$scope","$state"]}(),angular.module("app.card",[]).directive("cardDirective",cardDirective),angular.module("app.login",[]).directive("loginDirective",loginDirective),angular.module("app.navbar",[]).directive("navbarDirective",navbarDirective),angular.module("app.profile",[]).directive("profileDirective",profileDirective),profileController.$inject=["$rootScope","userService","trackService","markerParser"],angular.module("app.register",[]).directive("registerDirective",registerDirective),angular.module("app.layout",[]).directive("layoutDirective",layoutDirective),LayoutController.$inject=["$scope","$rootScope","$state","$stateParams","trackService","markerParser","mapConfigService","leafletMapEvents","leafletData","$location"],function(){"use strict";function e(e,t,r,a,o,n,l){function i(e){e&&(s.uploading=!0,e.upload=l.upload({url:"api/photos/",data:{file:e}}).then(function(e){e.data.OperationResult===!0&&(s.img_src=e.data.Data.path,n.go("addtrack.gpx"))},function(e){}).finally(function(){s.uploading=!1}))}function c(e){e&&(s.uploading=!0,e.upload=l.upload({url:"api/gpx",data:{file:e}}).then(function(e){e.data.OperationResult===!0&&(s.gpx=e.data.Data.path,n.go("addtrack.finish"))},function(e){}).finally(function(){s.uploading=!1}))}var s=this;s.layers=r.getLayer(),s.center=r.getCenter(),s.location,s.ownedBy=t.user._id,s.img_src="src",s.summary,s.altitude,s.distance,s.name="",s.coordinates=[],s.uploadGPX=c,s.uploadPic=i,e.loginLoading=!0,s.addTrack=function(){o.addTrack(s).then(function(e){n.go("layout")},function(e){})},angular.extend(e,{markers:{mainMarker:{lat:s.coordinates[0],lng:s.coordinates[1],focus:!0,message:"Başka bir noktaya tıklayarak kaydır.",draggable:!0}}}),e.$on("leafletDirectiveMap.click",function(t,r){var o=r.leafletEvent;a.geocodeLatlng(o.latlng.lat,o.latlng.lng).then(function(e){s.location=e},function(e){}),e.markers.mainMarker.lat=o.latlng.lat,e.markers.mainMarker.lng=o.latlng.lng,s.coordinates=[o.latlng.lng,o.latlng.lat]})}angular.module("app.rotaekle",["app.map","ngAutocomplete","app.trackService","ngFileUpload","angular-ladda"]).controller("rotaEkleController",e),e.$inject=["$scope","$rootScope","mapConfigService","reverseGeocode","trackService","$state","Upload"]}(),angular.module("app.layoutDetail",[]).directive("layoutDetailDirective",layoutDetailDirective),LayoutDetailController.$inject=["$scope","$stateParams","trackService","mapConfigService","leafletData"],markerParser.$inject=["$q"],angular.module("app.markerParser",[]).factory("markerParser",markerParser),trackService.$inject=["$http"],angular.module("app.trackService",[]).factory("trackService",trackService),userService.$inject=["$http"],angular.module("app.userService",[]).factory("userService",userService),angular.module("ngAutocomplete",[]).directive("ngAutocomplete",["$parse",function(e){return{scope:{details:"=",ngAutocomplete:"=",options:"="},link:function(e,t,r,a){var o,n=function(){o={},e.options&&(e.options.types&&(o.types=[],o.types.push(e.options.types)),e.options.bounds&&(o.bounds=e.options.bounds),e.options.country&&(o.componentRestrictions={country:e.options.country}))};n();var l=function(){e.gPlace=new google.maps.places.Autocomplete(t[0],o),google.maps.event.addListener(e.gPlace,"place_changed",function(){e.$apply(function(){e.details=e.gPlace.getPlace(),e.ngAutocomplete=t.val()})})};l(),e.watchOptions=function(){return e.options},e.$watch(e.watchOptions,function(){n(),l(),t[0].value="",e.ngAutocomplete=t.val()},!0)}}}]),angular.module("app.map",[]).factory("mapConfigService",mapConfigService),geocode.$inject=["$q"],angular.module("app.map").factory("geocode",geocode),reverseGeocode.$inject=["$q","$http"],angular.module("app.map").factory("reverseGeocode",reverseGeocode);